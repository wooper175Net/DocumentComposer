// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

model User {
  id            Int     @id @default(autoincrement())
  email         String  @unique
  name          String?
  userAuthToken String  @unique
  username      String
  password      String

  cases Case[]
}

model Case {
  id         Int      @id @default(autoincrement())
  status     String
  caseNumber String   @unique
  address    String
  published  Boolean  @default(false)
  createdBy  Int
  createdAt  DateTime @default(now())
  lastUpdate DateTime @updatedAt

  creator   User       @relation(fields: [createdBy], references: [id], onDelete: Cascade, onUpdate: Cascade)
  documents Document[]
}

model Document {
  id         Int      @id @default(autoincrement())
  heading    String
  type       String
  desc       String?
  done       Boolean  @default(false)
  caseId     Int
  sequence   Int      @default(0)
  createdAt  DateTime @default(now())
  lastUpdate DateTime @updatedAt

  caseItem         Case              @relation(fields: [caseId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  documentSubItems DocumentSubItem[] @relation("DocumentSubItems")
}

model DocumentSubItem {
  id                 Int      @id @default(autoincrement())
  label              String
  checked            Boolean?
  type               String   @default("todo")
  documentId         Int?
  documentTemplateId Int?
  createdAt          DateTime @default(now())
  lastUpdate         DateTime @updatedAt

  document         Document?         @relation("DocumentSubItems", fields: [documentId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  documentTemplate TemplateDocument? @relation("TemplateSubItems", fields: [documentTemplateId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model TemplateDocument {
  id               Int               @id @default(autoincrement())
  type             String
  heading          String
  desc             String?
  createdAt        DateTime          @default(now())
  lastUpdate       DateTime          @updatedAt
  documentSubItems DocumentSubItem[] @relation("TemplateSubItems")
}
